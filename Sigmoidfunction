def Rangeseek():
    # Import functions to read images and numpy and plot
    import cv2
    import numpy as np
    from math import exp

    # Assign image and transform to grey
    #file = 'Espinha.png'
    #file = 'lenna.png'
    file = 'lena2.jpg'
    #file = 'Lig_Cooper.jpg'
    #file = 'mama1.jpg'
    img1 = cv2.imread(file)
    img2 = cv2.cvtColor(img1, cv2.COLOR_BGR2GRAY)
    img3 = cv2.cvtColor(img1, cv2.COLOR_BGR2GRAY)

    # Define parameter for sigmoid function
    q = 0.5
    beta = 60 # Greyscale to seek
    alpha = 10 # Standard deviation

    # Read all the image size and define 3rd image acc with the Sigmoid function
    for y in range(len(img1)):                      # Count until max line
        for x in range(len(img1[0])):               # Count until max column
            I = img2[y, x]                          # Read pixel intensity of each point
            den = 1 + exp(-((I - beta) / alpha))    # Denominator of sigmoid function
            img3[y, x] = 255 * q / den              # Numerator of sigmoid function

    # Make the greyscale images have three channels in order to concatenate
    img2_3_channel = cv2.cvtColor(img2, cv2.COLOR_GRAY2BGR)
    img3_3_channel = cv2.cvtColor(img3, cv2.COLOR_GRAY2BGR)

    # Resize the images to a percent of its original size in order to show in the screen
    siz = 400/len(img1[0])
    img1 = cv2.resize(img1, (0, 0), None, siz, siz)
    img2 = cv2.resize(img2_3_channel, (0, 0), None, siz, siz)
    img3 = cv2.resize(img3_3_channel, (0, 0), None, siz, siz)

    # Concatenate the 3 images
    numpy_horizontal_concat = np.concatenate((img1, img2, img3 ), axis=1)

    # Show the images
    cv2.imshow('Original / Greyscale / Sigmoid', numpy_horizontal_concat)

    # Wait a key to finish
    cv2.waitKey()

Rangeseek()