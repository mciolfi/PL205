def imageget():
    import cv2
    import numpy as np
    from matplotlib import pyplot as plt

    #file = 'Espinha.png'
    file = 'lenna.png'
    c = 1
    r = 0
    img1 = cv2.imread(file)
    img2 = cv2.cvtColor(img1, cv2.COLOR_BGR2GRAY)
    img3 = []
    for y in range (len(img2)):
         r = img2[y]/255    # Define the variable between 0 to 1
         img3.append(c * r ** y)

    print(img3)
    #maximo = max(max(img3))
    # %im3 = (im3/maximo);
    titles = ['Original Image', 'Image 1']
    images = [img1, img2]
    for i in range(2):
        plt.subplot(1, 2, i+1), plt.imshow(images[i], 'gray')
        plt.title(titles[i])
        plt.xticks([]), plt.yticks([])

    #subplot(1,2,1)
    #imshow(img2/255);
    #subplot(1,2,2)
    #imshow(img3);

    hsv = cv2.cvtColor(img1, cv2.COLOR_BGR2HSV)

    cv2.imshow('Original image', img1)
    cv2.imshow('Gray image', img2)
    #cv2.imshow('teste', img3)


    limiar = 127

    # define range of white color in HSV
    # change it according to your need !
    lower_white = np.array([0, 0, 0], dtype=np.uint8)
    upper_white = np.array([limiar, limiar, limiar], dtype=np.uint8)

    # Threshold the HSV image to get only white colors
    mask = cv2.inRange(hsv, lower_white, upper_white)
    # Bitwise-AND mask and original image
    res = cv2.bitwise_and(img1, img1, mask=mask)

    titles = ['Imagem Original', 'Mascara', 'Resultado']
    images = [img1, mask, res]

    for i in range(3):
        plt.subplot(1, 3, i + 1), plt.imshow(images[i], 'gray')
        plt.title(titles[i])
        plt.xticks([]), plt.yticks([])


    plt.show()
imageget()
# C=1
# path=
# im1=imread(path)
# im2=round(double(rgb2gray(im1)));
# [lin,col]=size(im2)
# for y=1 in range (lin):
#    r=im2(y,x)/255
#    im3(y,x) = c*r^b;
# %maximo = max(max(im3));
# %im3 = (im3/maximo);

# subplot(1,2,1)
# imshow(im2/255);
# subplot(1,2,2)
# imshow(im3);
